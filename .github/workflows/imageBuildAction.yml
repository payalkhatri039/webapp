name: Integration Actions to Build Custom Image

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  action_on_pull_request_merge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      PORT: ${{ secrets.ENV_PORT }}
      DB_NAME: ${{ secrets.POSTGRES_DB }}
      DB_USER: ${{ secrets.POSTGRES_USER }}
      DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      HOST: ${{ vars.HOST}}
      DIALECT: ${{vars.DIALECT}}
      LINK_EXPIRATION_TIME: ${{vars.LINK_EXPIRATION_TIME}}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      REGION: ${{vars.REGION}}
      ZONE: ${{vars.ZONE}}
      SOURCE_IMAGE_FAMILY: ${{ vars.SOURCE_IMAGE_FAMILY }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      DISK_SIZE: ${{ vars.DISK_SIZE}}
      DISK_TYPE: ${{ vars.DISK_TYPE }}
      TEMPLATE_NAME: ${{vars.INSTANCE_TEMPLATE_NAME}}
      NETWORK_INTERFACE_TIER: ${{vars.NETWORK_INTERFACE_TIER}}
      SUBNET: ${{vars.SUBNET}}
      KEYRING_NAME: ${{vars.KEYRING_NAME}}
      MIG: ${{vars.MIG}}
      MIG_INSTANCE_TEMPLATE_PATH: ${{vars.MIG_INSTANCE_TEMPLATE_PATH}}
      MAX_INSTANCE_UNAVAILABLE: ${{vars.MAX_INSTANCE_UNAVAILABLE}}
      MACHINE_TYPE: ${{vars.MACHINE_TYPE}}
      INSTANCE_DB_HOST: ${{ vars.INSTANCE_DB_HOST}}
      INSTANCE_DB_PASSWORD: ${{vars.INSTANCE_DB_PASSWORD}}
      VM_INSTANCE_KEY: ${{vars.VM_INSTANCE_KEY}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: GCP Authentication
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.IAM_SERVICE_ACCOUNT }}"

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Use gcloud CLI
        run: "gcloud info"

      - name: Setup Packer
        uses: hashicorp/setup-packer@main

      - name: Create Zip File of Webapp Repo
        run: zip -r webapp.zip .

      - name: Move Zip to Workflows Directory
        run: mv webapp.zip vm-image/

      - name: Init and Build Custom Image
        run: |
          cd vm-image/
          packer init gcpBuild.pkr.hcl
          IMAGE_ID=$(packer build -machine-readable gcpBuild.pkr.hcl | awk -F, '$0 ~/artifact,0,id/ {print $6}')
          gcloud compute instance-templates create $TEMPLATE_NAME \
          --project=$PROJECT_ID \
          --description="This template is used to create web instances depending on the load" \
          --machine-type=$MACHINE_TYPE \
          --network-interface=network-tier=$NETWORK_INTERFACE_TIER,subnet=$SUBNET \
          --instance-template-region=$REGION \
          --region=$REGION \
          --maintenance-policy=MIGRATE \
          --provisioning-model=STANDARD \
          --service-account=service-account-webapp@csye6225-a03.iam.gserviceaccount.com \
          --scopes=https://www.googleapis.com/auth/pubsub,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write \
          --tags=web-instance \
          --create-disk=auto-delete=yes,boot=yes,device-name=persistent-disk-0,image=$IMAGE_ID,kms-key=$VM_INSTANCE_KEY,mode=rw,size=$DISK_SIZE,type=$DISK_TYPE \
          --no-shielded-secure-boot \
          --shielded-vtpm \
          --shielded-integrity-monitoring \
          --reservation-affinity=any \
          --metadata=startup-script="#/bin/bash
          cd /home/Cloud/webapp/ ||exit
          sudo tee -a .env <<EOF >/dev/null
          PORT=$PORT
          DB_NAME=$DB_NAME
          DB_USER=$DB_USER
          DB_PASSWORD=$INSTANCE_DB_PASSWORD
          HOST=$INSTANCE_DB_HOST
          DIALECT=$DIALECT
          NODE_ENV=PROD
          LINK_EXPIRATION_TIME=$LINK_EXPIRATION_TIME
          EOF
          sudo chown csye6225:csye6225 .env
          " \
          --instance-template-region=$REGION

      - name: Configure Managed Instance Group to Use the New Template
        run: gcloud compute instance-groups managed set-instance-template $MIG --template=$MIG_INSTANCE_TEMPLATE_PATH/$TEMPLATE_NAME --region=$REGION

      - name: Recreate Instances in Managed Instance Group
        run: gcloud compute instance-groups managed rolling-action start-update $MIG --version=template=$MIG_INSTANCE_TEMPLATE_PATH/$TEMPLATE_NAME --region=$REGION --replacement-method=substitute

      - name: Wait for Instance Group Refresh
        run: gcloud compute instance-groups managed wait-until --stable $MIG --region=$REGION
